{"version":3,"sources":["components/calendar/Month.js","components/calendar/index.js","components/Months.js","index.js"],"names":["Month","React","Component","month","year","firstDay","Date","toDateString","Months","map","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0OACaA,G,MCEyBC,IAAMC,UDFvB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACvBC,EAAW,IAAIC,KAAKF,EAAMD,GAC9B,OACI,4BAAKE,EAASE,kBEFTC,EAAS,WAElB,MADe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAE5BC,KAAI,SAACN,GAAD,OACP,kBAAC,EAAD,CAAOA,MAAOA,EAAOC,KAAM,WCGvC,IAAMM,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,mBALhB,WACI,OAAO,kBAAC,EAAD,QAIK,MAASJ,I","file":"static/js/main.fc8e93c0.chunk.js","sourcesContent":["import React from \"react\";\r\nexport const Month = ({ month, year }) => {\r\n    let firstDay = new Date(year, month);\r\n    return (\r\n        <li>{firstDay.toDateString()}</li>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./calendar.css\";\r\nexport default class Calendar extends React.Component {\r\n    weekdayshort = moment.weekdaysShort();\r\n\r\n    state = {\r\n        showYearTable: false,\r\n        showMonthTable: false,\r\n        showDateTable: true,\r\n        dateObject: moment(),\r\n        allmonths: moment.months(),\r\n        selectedDay: null\r\n    };\r\n    daysInMonth = () => {\r\n        return this.state.dateObject.daysInMonth();\r\n    };\r\n    year = () => {\r\n        return this.state.dateObject.format(\"Y\");\r\n    };\r\n    currentDay = () => {\r\n        return this.state.dateObject.format(\"D\");\r\n    };\r\n    firstDayOfMonth = () => {\r\n        let dateObject = this.state.dateObject;\r\n        let firstDay = moment(dateObject)\r\n            .startOf(\"month\")\r\n            .format(\"d\"); // Day of week 0...1..5...6\r\n        return firstDay;\r\n    };\r\n    month = () => {\r\n        return this.state.dateObject.format(\"MMMM\");\r\n    };\r\n    showMonth = (e, month) => {\r\n        this.setState({\r\n            showMonthTable: !this.state.showMonthTable,\r\n            showDateTable: !this.state.showDateTable\r\n        });\r\n    };\r\n    setMonth = month => {\r\n        let monthNo = this.state.allmonths.indexOf(month);\r\n        let dateObject = Object.assign({}, this.state.dateObject);\r\n        dateObject = moment(dateObject).set(\"month\", monthNo);\r\n        this.setState({\r\n            dateObject: dateObject,\r\n            showMonthTable: !this.state.showMonthTable,\r\n            showDateTable: !this.state.showDateTable\r\n        });\r\n    };\r\n    MonthList = props => {\r\n        let months = [];\r\n        props.data.map(data => {\r\n            months.push(\r\n                <td\r\n                    key={data}\r\n                    className=\"calendar-month\"\r\n                    onClick={e => {\r\n                        this.setMonth(data);\r\n                    }}\r\n                >\r\n                    <span>{data}</span>\r\n                </td>\r\n            );\r\n        });\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        months.forEach((row, i) => {\r\n            if (i % 3 !== 0 || i === 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n        });\r\n        rows.push(cells);\r\n        let monthlist = rows.map((d, i) => {\r\n            return <tr>{d}</tr>;\r\n        });\r\n\r\n        return (\r\n            <table className=\"calendar-month\">\r\n                <thead>\r\n                <tr>\r\n                    <th colSpan=\"4\">Select a Month</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{monthlist}</tbody>\r\n            </table>\r\n        );\r\n    };\r\n    showYearTable = e => {\r\n        this.setState({\r\n            showYearTable: !this.state.showYearTable,\r\n            showDateTable: !this.state.showDateTable\r\n        });\r\n    };\r\n\r\n    onPrev = () => {\r\n        let curr = \"\";\r\n        if (this.state.showYearTable === true) {\r\n            curr = \"year\";\r\n        } else {\r\n            curr = \"month\";\r\n        }\r\n        this.setState({\r\n            dateObject: this.state.dateObject.subtract(1, curr)\r\n        });\r\n    };\r\n    onNext = () => {\r\n        let curr = \"\";\r\n        if (this.state.showYearTable === true) {\r\n            curr = \"year\";\r\n        } else {\r\n            curr = \"month\";\r\n        }\r\n        this.setState({\r\n            dateObject: this.state.dateObject.add(1, curr)\r\n        });\r\n    };\r\n    setYear = year => {\r\n        // alert(year)\r\n        let dateObject = Object.assign({}, this.state.dateObject);\r\n        dateObject = moment(dateObject).set(\"year\", year);\r\n        this.setState({\r\n            dateObject: dateObject,\r\n            showMonthTable: !this.state.showMonthTable,\r\n            showYearTable: !this.state.showYearTable\r\n        });\r\n    };\r\n    onYearChange = e => {\r\n        this.setYear(e.target.value);\r\n    };\r\n    getDates(startDate, stopDate) {\r\n        var dateArray = [];\r\n        var currentDate = moment(startDate);\r\n        var stopDate = moment(stopDate);\r\n        while (currentDate <= stopDate) {\r\n            dateArray.push(moment(currentDate).format(\"YYYY\"));\r\n            currentDate = moment(currentDate).add(1, \"year\");\r\n        }\r\n        return dateArray;\r\n    }\r\n    YearTable = props => {\r\n        let months = [];\r\n        let nextten = moment()\r\n            .set(\"year\", props)\r\n            .add(\"year\", 12)\r\n            .format(\"Y\");\r\n\r\n        let tenyear = this.getDates(props, nextten);\r\n\r\n        tenyear.map(data => {\r\n            months.push(\r\n                <td\r\n                    key={data}\r\n                    className=\"calendar-month\"\r\n                    onClick={e => {\r\n                        this.setYear(data);\r\n                    }}\r\n                >\r\n                    <span>{data}</span>\r\n                </td>\r\n            );\r\n        });\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        months.forEach((row, i) => {\r\n            if (i % 3 !== 0 || i == 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n        });\r\n        rows.push(cells);\r\n        let yearlist = rows.map((d, i) => {\r\n            return <tr>{d}</tr>;\r\n        });\r\n\r\n        return (\r\n            <table className=\"calendar-month\">\r\n                <thead>\r\n                <tr>\r\n                    <th colSpan=\"4\">Select a Yeah</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{yearlist}</tbody>\r\n            </table>\r\n        );\r\n    };\r\n    onDayClick = (e, d) => {\r\n        this.setState(\r\n            {\r\n                selectedDay: d\r\n            },\r\n            () => {\r\n                console.log(\"SELECTED DAY: \", this.state.selectedDay);\r\n            }\r\n        );\r\n    };\r\n    render() {\r\n        let weekdayshortname = this.weekdayshort.map(day => {\r\n            return <th key={day}>{day}</th>;\r\n        });\r\n        let blanks = [];\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>);\r\n        }\r\n        let daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let currentDay = d == this.currentDay() ? \"today\" : \"\";\r\n            daysInMonth.push(\r\n                <td key={d} className={`calendar-day ${currentDay}`}>\r\n          <span\r\n              onClick={e => {\r\n                  this.onDayClick(e, d);\r\n              }}\r\n          >\r\n            {d}\r\n          </span>\r\n                </td>\r\n            );\r\n        }\r\n        var totalSlots = [...blanks, ...daysInMonth];\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if (i % 7 !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                // let insertRow = cells.slice();\r\n                rows.push(cells);\r\n            }\r\n        });\r\n\r\n        let daysinmonth = rows.map((d, i) => {\r\n            return <tr>{d}</tr>;\r\n        });\r\n\r\n        return (\r\n            <div className=\"tail-datetime-calendar\">\r\n                <div className=\"calendar-navi\">\r\n          <span\r\n              onClick={e => {\r\n                  this.onPrev();\r\n              }}\r\n              class=\"calendar-button button-prev\"\r\n          />\r\n                    {!this.state.showMonthTable && (\r\n                        <span\r\n                            onClick={e => {\r\n                                this.showMonth();\r\n                            }}\r\n                            class=\"calendar-label\"\r\n                        >\r\n              {this.month()}\r\n            </span>\r\n                    )}\r\n                    <span className=\"calendar-label\" onClick={e => this.showYearTable()}>\r\n            {this.year()}\r\n          </span>\r\n                    <span\r\n                        onClick={e => {\r\n                            this.onNext();\r\n                        }}\r\n                        className=\"calendar-button button-next\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"calendar-date\">\r\n                    {this.state.showYearTable && <this.YearTable props={this.year()} />}\r\n                    {this.state.showMonthTable && (\r\n                        <this.MonthList data={moment.months()} />\r\n                    )}\r\n                </div>\r\n\r\n                {this.state.showDateTable && (\r\n                    <div className=\"calendar-date\">\r\n                        <table className=\"calendar-day\">\r\n                            <thead>\r\n                            <tr>{weekdayshortname}</tr>\r\n                            </thead>\r\n                            <tbody>{daysinmonth}</tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Month } from \"./calendar/Month\";\r\nexport const Months = () => {\r\n    const months = [0,1,2,3,4,5,6,7,8,9,10,11];\r\n    return (\r\n        months.map((month) => (\r\n            <Month month={month} year={2020}/>\r\n        ))\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Calendar from \"./components/calendar\";\nimport { Months } from \"./components/Months\";\n\nfunction App() {\n    return <Months />;\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}